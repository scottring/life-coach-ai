{
  "name": "Calendar Task Extractor",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyHour"
            }
          ]
        }
      },
      "id": "schedule-trigger",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "resource": "event",
        "operation": "getAll",
        "calendar": "primary",
        "returnAll": false,
        "limit": 50,
        "options": {
          "timeMin": "={{$now.minus(1, 'day').toISO()}}",
          "timeMax": "={{$now.plus(14, 'days').toISO()}}",
          "singleEvents": true,
          "orderBy": "startTime"
        }
      },
      "id": "get-calendar-events",
      "name": "Get Calendar Events",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1,
      "position": [450, 300],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "3",
          "name": "Google Calendar OAuth2 API"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "message",
        "modelId": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are an expert at extracting preparation tasks from calendar events. Return ONLY a JSON array of tasks."
            },
            {
              "role": "user",
              "content": "Extract preparation tasks from these calendar events:\\n\\n{{$json[\"items\"].map(event => `Event: ${event.summary}\\nTime: ${event.start.dateTime || event.start.date}\\nDescription: ${event.description || 'None'}\\nLocation: ${event.location || 'None'}`).join('\\n\\n')}}\\n\\nFor each task return:\\n{\\n  \"title\": \"Clear task description\",\\n  \"description\": \"What needs to be done\",\\n  \"priority\": 1-5,\\n  \"dueDate\": \"YYYY-MM-DD\",\\n  \"context\": \"Work/Personal\",\\n  \"relatedEventId\": \"calendar_event_id\"\\n}\\n\\nReturn empty array [] if no tasks needed."
            }
          ]
        },
        "options": {
          "temperature": 0.1
        }
      },
      "id": "extract-calendar-tasks",
      "name": "Extract Tasks with OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [650, 300],
      "credentials": {
        "openAiApi": {
          "id": "2",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const tasksJson = $input.first().json.message.content;\nlet tasks = [];\n\ntry {\n  tasks = JSON.parse(tasksJson);\n} catch (e) {\n  // Try to extract JSON from response\n  const match = tasksJson.match(/\\[.*\\]/s);\n  if (match) {\n    tasks = JSON.parse(match[0]);\n  }\n}\n\n// Add metadata to each task\nreturn tasks.map(task => ({\n  json: {\n    ...task,\n    source: 'calendar',\n    extractedAt: new Date().toISOString()\n  }\n}));"
      },
      "id": "process-calendar-tasks",
      "name": "Process Calendar Tasks",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "calendar-tasks",
        "responseMode": "onReceived",
        "options": {}
      },
      "id": "webhook-calendar",
      "name": "Send to App Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [1050, 300],
      "webhookId": "life-coach-calendar-tasks"
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get Calendar Events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Calendar Events": {
      "main": [
        [
          {
            "node": "Extract Tasks with OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Tasks with OpenAI": {
      "main": [
        [
          {
            "node": "Process Calendar Tasks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Calendar Tasks": {
      "main": [
        [
          {
            "node": "Send to App Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}