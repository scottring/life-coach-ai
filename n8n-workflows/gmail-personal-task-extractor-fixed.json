{
  "name": "Gmail Personal Task Extractor",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute",
              "minute": 30
            }
          ]
        }
      },
      "id": "gmail-personal-trigger",
      "name": "Gmail Personal Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [250, 300],
      "credentials": {
        "gmailOAuth2Api": {
          "id": "personal-gmail",
          "name": "Gmail OAuth2 API - Personal"
        }
      }
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "get",
        "messageId": "={{$json[\"id\"]}}",
        "options": {
          "format": "full"
        }
      },
      "id": "get-personal-email-details",
      "name": "Get Personal Email Details",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [450, 300],
      "credentials": {
        "gmailOAuth2Api": {
          "id": "personal-gmail",
          "name": "Gmail OAuth2 API - Personal"
        }
      }
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "message",
        "modelId": "gpt-4",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You extract personal and family-related tasks from personal emails. Focus on:\n- Family commitments and events\n- Personal appointments (doctor, dentist, etc.)\n- Home maintenance and repairs\n- Social commitments and RSVPs\n- Personal finances and bills\n- Health and wellness reminders\n- Pet care (like Jax's vet appointments)\n- Travel planning for vacations\n\nDefault context should be \"Personal\" or \"Family\" based on content.\nPriority should be higher (4-5) for health, family emergencies, or time-sensitive personal matters.\nReturn ONLY a JSON array of tasks."
            },
            {
              "role": "user", 
              "content": "Extract tasks from this PERSONAL email:\\n\\nFrom: {{$json[\"payload\"][\"headers\"].find(h => h.name === 'From').value}}\\nTo: {{$json[\"payload\"][\"headers\"].find(h => h.name === 'To').value}}\\nSubject: {{$json[\"payload\"][\"headers\"].find(h => h.name === 'Subject').value}}\\nBody: {{$json[\"snippet\"]}}\\n\\nFor each task return:\\n{\\n  \"title\": \"Clear, actionable task description\",\\n  \"description\": \"Additional context and details\",\\n  \"priority\": 1-5 (5=urgent health/family, 4=important personal, 3=normal, 2=low, 1=someday),\\n  \"dueDate\": \"YYYY-MM-DD or null\",\\n  \"context\": \"Personal\" or \"Family\" based on content\\n}\\n\\nImportant: Look for commitments like:\\n- \"I'll talk to my parents about...\"\\n- \"I'll get back to you about...\"\\n- \"I need to schedule...\"\\n- \"I'll follow up on...\"\\n\\nReturn empty array [] if no tasks found."
            }
          ]
        },
        "options": {
          "temperature": 0.1
        }
      },
      "id": "extract-personal-tasks",
      "name": "Extract Personal Tasks with OpenAI",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [650, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-api",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const tasksJson = $input.first().json.message.content;\nlet tasks = [];\n\ntry {\n  tasks = JSON.parse(tasksJson);\n} catch (e) {\n  // Try to extract JSON from response\n  const match = tasksJson.match(/\\[.*\\]/s);\n  if (match) {\n    tasks = JSON.parse(match[0]);\n  }\n}\n\n// Add email and account metadata to each task\nconst emailData = $input.all()[0].json;\nconst emailId = emailData.id;\nconst subject = emailData.payload.headers.find(h => h.name === 'Subject')?.value || '';\nconst from = emailData.payload.headers.find(h => h.name === 'From')?.value || '';\n\n// Extract personal email address from credentials\nconst personalEmail = 'smkaufman@gmail.com'; // Update with actual personal email\n\nreturn tasks.map(task => ({\n  json: {\n    ...task,\n    source: 'email',\n    accountType: 'personal',\n    accountEmail: personalEmail,\n    emailId: emailId,\n    emailSubject: subject,\n    emailFrom: from,\n    extractedAt: new Date().toISOString()\n  }\n}));"
      },
      "id": "process-personal-tasks",
      "name": "Process Personal Tasks",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://life-coach-ai-drab.vercel.app/api/n8n/gmail-tasks",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Account-Type",
              "value": "personal"
            },
            {
              "name": "X-Account-Email",
              "value": "smkaufman@gmail.com"
            },
            {
              "name": "X-Webhook-Secret",
              "value": "my-secret-key-2024"
            }
          ]
        },
        "options": {}
      },
      "id": "send-to-app-personal",
      "name": "Send to Life Coach AI",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1050, 300]
    }
  ],
  "connections": {
    "Gmail Personal Trigger": {
      "main": [
        [
          {
            "node": "Get Personal Email Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Personal Email Details": {
      "main": [
        [
          {
            "node": "Extract Personal Tasks with OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Personal Tasks with OpenAI": {
      "main": [
        [
          {
            "node": "Process Personal Tasks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Personal Tasks": {
      "main": [
        [
          {
            "node": "Send to Life Coach AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "versionId": "personal-v1"
}